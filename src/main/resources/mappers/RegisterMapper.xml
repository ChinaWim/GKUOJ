<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oj.gkuoj.dao.RegisterMapper">
    <resultMap id="BaseResultMap" type="com.oj.gkuoj.entity.Register">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="comp_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="solution_count" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="submit_count" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="ac_count" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="score" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, comp_id, solution_count, submit_count, ac_count, score, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from register
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from register
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyProperty="id" parameterType="com.oj.gkuoj.entity.Register">
    insert into register (id, user_id, comp_id, 
      solution_count, submit_count, ac_count, score,
      create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, 
      #{solutionCount,jdbcType=INTEGER}, #{submitCount,jdbcType=INTEGER}, #{acCount,jdbcType=INTEGER}, #{score,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" keyProperty="id" parameterType="com.oj.gkuoj.entity.Register">
        insert into register
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="compId != null">
                comp_id,
            </if>
            <if test="solutionCount != null">
                solution_count,
            </if>
            <if test="submitCount != null">
                submit_count,
            </if>
            <if test="acCount != null">
                ac_count,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="compId != null">
                #{compId,jdbcType=INTEGER},
            </if>
            <if test="solutionCount != null">
                #{solutionCount,jdbcType=INTEGER},
            </if>
            <if test="submitCount != null">
                #{submitCount,jdbcType=INTEGER},
            </if>
            <if test="acCount != null">
                #{acCount,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                #{score,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.oj.gkuoj.entity.Register">
        update register
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="compId != null">
                comp_id = #{compId,jdbcType=INTEGER},
            </if>
            <if test="solutionCount != null">
                solution_count = #{solutionCount,jdbcType=INTEGER},
            </if>
            <if test="submitCount != null">
                submit_count = #{submitCount,jdbcType=INTEGER},
            </if>
            <if test="acCount != null">
                ac_count = #{acCount,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.oj.gkuoj.entity.Register">
    update register
    set user_id = #{userId,jdbcType=INTEGER},
      comp_id = #{compId,jdbcType=INTEGER},
      solution_count = #{solutionCount,jdbcType=INTEGER},
      submit_count = #{submitCount,jdbcType=INTEGER},
      ac_count = #{acCount,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <select id="getByUserIdAndCompId" resultType="com.oj.gkuoj.entity.Register" parameterType="map">
     select <include refid="Base_Column_List"/>
    from register
    where user_id = #{userId}
          and comp_id = #{compId}

    </select>
    <select id="countByUserIdAndCompId" resultType="java.lang.Integer" parameterType="map">
        select count(id)
        from register
        where user_id = #{userId}
        and comp_id = #{compId}
    </select>

    <select id="listRegisterByCompId2Page" resultType="com.oj.gkuoj.response.RegisterVO" parameterType="int">
        select r.id, r.user_id, r.comp_id, r.solution_count, r.submit_count, r.ac_count, r.score, r.create_time, r.update_time,
        u.name,u.school
        from register r
        join user u on u.id = r.user_id
        where  r.comp_id = #{compId}
        order by  r.score desc, r.submit_count desc
    </select>

    <select id="listNoScoreRegisterByCompId" resultType="com.oj.gkuoj.entity.Register" parameterType="map">
        select <include refid="Base_Column_List"></include>
        from register
        where  comp_id = #{compId} and score is null
    </select>

    <select id="countByUserId" resultType="java.lang.Integer" parameterType="int">
        select count(id) from register
        where user_id = #{userId}
    </select>


</mapper>