<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oj.gkuoj.dao.UpMapper">
    <resultMap id="BaseResultMap" type="com.oj.gkuoj.entity.Up">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="type_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="status" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, type_id, type, user_id, status, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from up
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from up
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyProperty="id" parameterType="com.oj.gkuoj.entity.Up">
    insert into up (id, type_id, type, 
      user_id, status, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{status,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" keyProperty="id" parameterType="com.oj.gkuoj.entity.Up">
        insert into up
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.oj.gkuoj.entity.Up">
        update up
        <set>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.oj.gkuoj.entity.Up">
    update up
    set type_id = #{typeId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getByBlogIdUserId" resultType="com.oj.gkuoj.entity.Up" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from up
        where type_id = #{blogId}
        and user_id = #{userId}
        and type = 0
    </select>
    <select id="getByBlogCommentIdUserId" resultType="com.oj.gkuoj.entity.Up" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from up
        where type_id = #{blogCommentId}
        and user_id = #{userId}
        and type = 1
    </select>
    <select id="countBlogCommentById" resultType="java.lang.Integer" parameterType="map">
    select count(id) from up
    where type = 1
    and type_id = #{blogCommentId}
    and status = true
  </select>

    <select id="countBlogById" resultType="java.lang.Integer" parameterType="map">
    select count(id) from up
    where type = 0
    and type_id = #{blogId}
    and status = true
  </select>
</mapper>